package com.mio.compiler.parser;
/*
java -jar java-cup-11b.jar /home/mio/Escritorio/2023/EDD/proyecto-final-EDD/src/main/cup/EstructuraParser.cup
*/
import com.mio.compiler.lexer.EstructuraLexer;

class EstructuraParser;

parser code{:

    public EstructuraParser(EstructuraLexer lexer){

        super(lexer);
    }
:}

terminal Token ESTRUCTURA, ESTRUCTURAS, TABLA, LBRACE, RBRACE, CLAVE, NAME, DIAGONAL, PADRE;
terminal Token BYTE, SHORT, INT, LONG, DOUBLE, FLOAT, BOOLEAN, CHAR, STRING;

non terminal main, structs, struct, structProd, attribute, lTable, rTable, type;
non terminal lKey, rKey, lName, rName, lStruct, rStruct, lStructs, rStructs, lParent, rParent;

start with main;

main
::=	lStructs structs rStructs
	;

structs
::=	structs struct
	| struct
	;

struct
::=	lStruct structProd rStruct
	;

structProd
::=	structProd attribute
	| attribute
	;

attribute
::=	lTable NAME rTable
	| lName type rName
	| lKey NAME rKey
	| lParent NAME rParent
	;

type
::= BYTE
    | SHORT
    | INT
    | LONG
    | DOUBLE
    | FLOAT
    | BOOLEAN
    | CHAR
    | STRING
    ;

lStruct
::= LBRACE ESTRUCTURA RBRACE
    ;

rStruct
::= LBRACE DIAGONAL ESTRUCTURA RBRACE
    ;

lStructs
::= LBRACE ESTRUCTURAS RBRACE
    ;

rStructs
::= LBRACE DIAGONAL ESTRUCTURAS RBRACE
    ;

lName
::= LBRACE NAME RBRACE
    ;

rName
::= LBRACE DIAGONAL NAME RBRACE
    ;

lKey
::= LBRACE CLAVE RBRACE
    ;

rKey
::= LBRACE DIAGONAL CLAVE RBRACE
    ;

lTable
::= LBRACE TABLA RBRACE
    ;

rTable
::= LBRACE DIAGONAL TABLA RBRACE
    ;

lParent
::= LBRACE PADRE RBRACE
    ;

rParent
::= LBRACE DIAGONAL PADRE RBRACE
    ;